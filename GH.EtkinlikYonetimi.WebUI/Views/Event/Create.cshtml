@using Newtonsoft.Json
@model EventCreateViewModel

@{
    ViewData["Title"] = "Etkinlik Ekle";
    ViewBag.PageTitle = "Etkinlik Ekle";
}

<div class="row my-3">
    <!-- Etkinlik Bilgileri Formu -->
    <div class="col-md-6">
        <form id="event-form" class="partnership-form" asp-action="Create" method="post">
            <h2 class="partnership-form-title">.:: Etkinlik Bilgileri</h2>

            <!-- Başlık -->
            <div class="mb-3">
                <label asp-for="Title" class="form-label"></label> (<span style="color:red">*</span>)
                <input asp-for="Title" class="form-control" placeholder="Etkinlik Başlığı" /> 
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <!-- Başlangıç ve Bitiş Tarihi -->
            <div class="mb-3 row">
                <div class="col">
                    <label asp-for="StartDate" class="form-label"></label> (<span style="color:red">*</span>)
                    <input asp-for="StartDate" class="form-control" type="datetime-local" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="col">
                    <label asp-for="EndDate" class="form-label"></label> (<span style="color:red">*</span>)
                    <input asp-for="EndDate" class="form-control" type="datetime-local" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
            </div>

            <!-- Yer -->
            <div class="mb-3">
                <label asp-for="Location" class="form-label"></label> (<span style="color:red">*</span>)
                <input asp-for="Location" class="form-control" placeholder="Yer" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>

            <!-- Açıklama -->
            <div class="mb-3">
                <label asp-for="Description" class="form-label"></label> (<span style="color:red">*</span>)
                <textarea asp-for="Description" class="form-control" placeholder="Etkinlik Açıklaması" rows="4"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- Görsel URL -->
            <div class="mb-3">
                <label asp-for="ImageUrl" class="form-label"></label> (<span style="color:red">*</span>)
                <input asp-for="ImageUrl" class="form-control" placeholder="Görsel URL" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>

            <!-- Etkinlik Tipi -->
            <div class="mb-3">
                <label asp-for="Type" class="form-label"></label> (<span style="color:red">*</span>)
                <input asp-for="Type" class="form-control" placeholder="Etkinlik Tipi" />
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <!-- Seçili katılımcı sayısı ve gizli alanlar -->
            <div class="mt-4">
                <label><strong>Katılımcı Sayısı: </strong> <span id="participant-count">0</span></label>
                <div id="selected-participants-hidden"></div>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Etkinliği Kaydet</button>
        </form>
    </div>

    <!-- Katılımcı Seçimi Paneli -->
    <div class="col-md-6">
        <div class="partnership-form">
            <h2 class="partnership-form-title">.:: Katılımcı Bilgileri</h2>

            <!-- Arama kutusu -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">Katılımcı Listesi</h5>
                <input type="text" id="participant-list-search" class="form-control form-control-sm" placeholder="Katılımcı ara..." style="max-width: 300px;">
            </div>

            <!-- Tümünü Seç checkbox'ı -->
            <div class="form-check mb-2">
                <input class="form-check-input" type="checkbox" id="select-all-global" />
                <label class="form-check-label" for="select-all-global">Tümünü Seç (Tüm Sayfalarda)</label>
            </div>

            <!-- Katılımcı Tablosu -->
            <table class="table table-striped" id="participant-table">
                <thead>
                    <tr>
                        <th>Seç</th>
                        <th>Ad Soyad</th>
                        <th>E-posta</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>

            <!-- Sayfalama -->
            <nav class="mt-3">
                <ul class="pagination" id="pagination"></ul>
            </nav>
        </div>
    </div>
</div>

<!-- Başarılı kayıt sonrası bildirim -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Kapat"></button>
    </div>

    <script>
        setTimeout(() => window.location.href = '/', 4000);
    </script>
}

@section Scripts {
    <script>
        // Katılımcı verisi ve seçim işlemleri
        const participants = @Html.Raw(JsonConvert.SerializeObject(Model.AllParticipants));
        const pageSize = 10;
        let currentPage = 1;
        let selectedIds = new Set();

        // Sayfa değiştir
        function changePage(page) {
            currentPage = page;
            const start = (page - 1) * pageSize;
            const pageItems = participants.slice(start, start + pageSize);

            let rows = '';
            pageItems.forEach(p => {
                const isChecked = selectedIds.has(p.Id) ? 'checked' : '';
                rows += `
                    <tr>
                        <td><input type="checkbox" class="form-check-input participant-checkbox" value="${p.Id}" ${isChecked} /></td>
                        <td><strong>${p.FirstName} ${p.LastName}</strong></td>
                        <td><span class="text-muted small">${p.Email}</span></td>
                    </tr>`;
            });

            $('#participant-table tbody').html(rows);
            updatePaginationUI();
            updateParticipantCount();
            syncHiddenInputs();
        }

        // Sayfalama arayüzünü güncelle
        function updatePaginationUI() {
            const pageCount = Math.ceil(participants.length / pageSize);
            let html = '';
            for (let i = 1; i <= pageCount; i++) {
                html += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="javascript:void(0);" onclick="changePage(${i})">${i}</a>
                         </li>`;
            }
            $('#pagination').html(html);
        }

        // Seçili katılımcı sayısını göster
        function updateParticipantCount() {
            $('#participant-count').text(selectedIds.size);
        }

        // Form için gizli inputları senkronize et
        function syncHiddenInputs() {
            const container = $('#selected-participants-hidden');
            container.empty();
            selectedIds.forEach(id => {
                container.append(`<input type="hidden" name="SelectedParticipantIds" value="${id}" />`);
            });
        }

        // Checkbox değişimi yakala
        $(document).on('change', '.participant-checkbox', function () {
            const id = parseInt($(this).val());
            if ($(this).is(':checked')) {
                selectedIds.add(id);
            } else {
                selectedIds.delete(id);
            }
            updateParticipantCount();
            syncHiddenInputs();
        });

        // Tümünü Seç kutusu işlevi
        $(document).on('change', '#select-all-global', function () {
            const isChecked = $(this).is(':checked');
            participants.forEach(p => {
                if (isChecked) {
                    selectedIds.add(p.Id);
                } else {
                    selectedIds.delete(p.Id);
                }
            });
            changePage(currentPage);
        });

        // Arama kutusu ile filtreleme
        $(document).on('input', '#participant-list-search', function () {
            const query = $(this).val().toLowerCase().trim();
            $('#participant-table tbody tr').each(function () {
                const text = $(this).text().toLowerCase();
                $(this).toggle(text.includes(query));
            });
        });

        // Form gönderiminden önce gizli alanları güncelle
        $('#event-form').on('submit', function () {
            syncHiddenInputs();
        });

        // Sayfa yüklendiğinde ilk sayfayı göster
        $(document).ready(function () {
            changePage(1);
        });
    </script>
}
